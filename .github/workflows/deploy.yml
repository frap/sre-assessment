name: "Deploy to AWS ECR"

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
      - converted_to_draft
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: "ci-prod-${{ github.ref }}-1"
  cancel-in-progress: true

env:
  FRONTEND_IMAGE: "clearpoint/frontend"
  BACKEND_IMAGE:  "clearpoint/backend"


jobs:
  deployaws:
    runs-on: ubuntu-latest
    steps:
      - name: "☁️ checkout repository"
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: "Build and push $FRONTEND_IMAGE"
        uses: docker/build-push-action@v3
        with:
          context: Frontend/
          #file: Frontend/Dockerfile
          push: true
          cache-from: type=gha,scope=$FRONTEND_IMAGE
          cache-to: type=gha,scope=$FRONTEND_IMAGE
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${FRONTEND_IMAGE}-${{ github.sha }}
            ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${FRONTEND_IMAGE}-latest

      - name: "Build and push ${FRONTEND_IMAGE}"
        uses: docker/build-push-action@v2
        with:
          context: Backend/TodoList.Api/
          #file: Backend/TodoList.Api/Dockerfile
          push: true
          cache-from: type=gha,scope=$BACKEND_IMAGE
          cache-to: type=gha,scope=$BACKEND_IMAGE
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${BACKEND_IMAGE}-${{ github.sha }}
            ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${BACKEND_IMAGE}-latest
            
      - name: Install Docker Compose with ECS support
        run: curl -L https://raw.githubusercontent.com/docker/compose-cli/main/scripts/install/install_linux.sh | sh

      - name: Docker context
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          GITHUB_SHA: ${{ github.sha }}
        run: |
          docker context create ecs ecs-context --from-env
          docker --context ecs-context compose up
